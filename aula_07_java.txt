
public class Pessoa {

  String nome, rg, cpf, endereco, telFixo, telCelular;

  //monta e retornar uma String com os dados da Pessoa
  public String retornaDados() {
    String dados = "";
    dados += "Nome: " + nome + "\n";
    dados += "\tRG: " + rg + "\n";
    dados += "\tCPF: " + String.valueOf(cpf) + "\n";
    dados += "\tEndereco: " + endereco + "\n";
    dados += "\tTelefone fixo: " + telFixo + "\n";
    dados += "\tTelefone cel.: " + telCelular + "\n";
    return dados;
  }

}

---

public class Aluno extends Pessoa { 

  int ra;
  String curso;

  public String retornaDadosAluno() {
    String dados;

    //Pega os dados da classe herdada
    dados = super.retornaDados();

    //Acrescenta os dados do aluno:
    dados += "\tRA: " + ra + "\n";
    dados += "\tCurso: " + curso + "\n";

    return dados;
  }
  
}

---

public class Professor extends Pessoa { 

  int matricula;
  float salario;

  public String retornaDadosProfessor() {
    String dados;

    //Pega os dados da classe herdada
    dados = super.retornaDados();

    //Acrescenta os dados do aluno:
    dados += "\tMatricula: " + matricula + "\n";
    dados += "\tSalario: " + salario + "\n";

    return dados;
  }
  
}

---

public class Principal {

  public static void main(String args[]) {
    Aluno a1 = new Aluno();
    Professor p1 = new Professor();    
    
    //Podemos acessar diretamente
    //os atributos da classe Pessoa.
    //Porque aluno a1 é um Objeto da classe Aluno
    //que herda da classe Pessoa.
    a1.nome = "Pedro Silva";
    a1.ra = 1234567890;
    a1.cpf = "001.002.003-00";
    a1.rg = "999999-X";
    a1.curso = "TADS";
    a1.endereco = "Rua A, 10";
    a1.telFixo = "(11) 1111-1111";
    a1.telCelular = "(11) 9999-9999";
    
    //idem para professor...
    p1.nome = "Carlos Campos";
    p1.matricula = 90020;
    p1.salario = 1200.00F;
    p1.cpf = "000.000.000-10";
    p1.rg = "111111-Y";
    p1.endereco = "Avenida B, 20";
    p1.telFixo = "(11) 0000-0000";
    p1.telCelular = "(11) 88888-8888";    

    //Imprimir os dados do aluno a1
    System.out.println("Dados do aluno: ");
    System.out.println(a1.retornaDadosAluno());

    //Imprimir os dados do professor p1    
    System.out.println("Dados do professor: ");
    System.out.println(p1.retornaDadosProfessor());
    
  }

}

===
SOBRESCRITA
===

public class Aluno2 extends Pessoa { 

  int ra;
  String curso;

  @Override
  public String retornaDados() {
    String dados;

    //Pega os dados da classe herdada
    dados = super.retornaDados();

    //Acrescenta os dados do aluno:
    dados += "\tRA: " + ra + "\n";
    dados += "\tCurso: " + curso + "\n";

    return dados;
  }
  
}

---

public class Professor2 extends Pessoa { 

  int matricula;
  float salario;

  @Override
  public String retornaDados() {
    String dados;

    //Pega os dados da classe herdada
    dados = super.retornaDados();

    //Acrescenta os dados do aluno:
    dados += "\tMatricula: " + matricula + "\n";
    dados += "\tSalario: " + salario + "\n";

    return dados;
  }
  
}

---

public class Principal2 {

  public static void main(String args[]) {
    Aluno a1 = new Aluno();
    Professor p1 = new Professor();    
    
    //Podemos acessar diretamente
    //os atributos da classe Pessoa.
    //Porque aluno a1 é um Objeto da classe Aluno
    //que herda da classe Pessoa.
    a1.nome = "Pedro Silva";
    a1.ra = 1234567890;
    a1.cpf = "001.002.003-00";
    a1.rg = "999999-X";
    a1.curso = "TADS";
    a1.endereco = "Rua A, 10";
    a1.telFixo = "(11) 1111-1111";
    a1.telCelular = "(11) 9999-9999";
    
    //idem para professor...
    p1.nome = "Carlos Campos";
    p1.matricula = 90020;
    p1.salario = 1200.00F;
    p1.cpf = "000.000.000-10";
    p1.rg = "111111-Y";
    p1.endereco = "Avenida B, 20";
    p1.telFixo = "(11) 0000-0000";
    p1.telCelular = "(11) 88888-8888";    

    //Imprimir os dados do aluno a1
    System.out.println("Dados do aluno: ");
    System.out.println(a1.retornaDados());

    //Imprimir os dados do professor p1    
    System.out.println("Dados do professor: ");
    System.out.println(p1.retornaDados());
    
  }

}

===
SOBRECARGA
===

public class Aluno3 extends Pessoa {

  int ra;
  String curso;

  //Construtor de Aluno, vazio
  public Aluno() {
    //Ao criar a instância de um aluno, é preciso criar a instância de
    //uma pessoa genérica com o construtor padrão da herança:
    super();
  }

  //Sobrecarregando o construtor, com outra assinatura
  public Aluno(String nome, String rg, String cpf, String endereco,
  String telFixo, String telCelular, int ra, String curso) {
    super();
    //Atribui os dados para o objeto mãe
    //Como os nomes dos atributos são iguais, é preciso dizer a qual
    //estamos referenciando. Usamos a palavra reservada "this"
    //para indicar que estamos usando os parametros locais (recebidos
    //nos atributos do construtor):
    this.rg = rg;
    this.nome = nome;
    this.cpf = cpf;
    this.endereco = endereco;
    this.telCelular = telCelular;
    this.telFixo = telFixo;

    //Agora atribui os valores locais:
    this.ra = ra;
    this.curso = curso;

  }

  //Note que o nome do método é exatamente o mesmo da super classe
  @Override
  public String retornaDados() {
    String dados;

    //Pega os dados da classe herdada
    dados = super.retornaDados();

    //Acrescenta os dados do aluno:
    dados += "\tRA: " + ra + "\n";
    dados += "\tCurso: " + curso + "\n";

    return dados;
  }
}

---

public class Principal3 {

  public static void main(String args[]) {
    //Agora podemos criar o aluno com os dados diretamante no construtor dele
    /*
    Os atributos devem ir na mesma ordem do construtor da classe:
    String nome, String rg, String cpf, String endereco,
    String telFixo, String telCelular, int ra, String curso
    */
    Aluno3 a1 = new Aluno3("Pedro Silva", "001101-X", "001.002.003-00", "Rua A, 10",
    "(11) 1111-2222", "(11) 99999-9999", 1902192, "TADS");

    //Vamos imprimir os dados do aluno a1
    System.out.println("Dados pessoais do aluno: ");
    //Na hora de chamar, você chama o mesmo método:
    System.out.println(a1.retornaDados());
  }
}
